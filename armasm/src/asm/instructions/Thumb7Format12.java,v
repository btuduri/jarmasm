head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2003.02.09.01.54.08;	author hans;	state Exp;
branches;
next	1.1;

1.1
date	2003.02.03.16.47.10;	author hans;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Thumb support updates
@
text
@package asm.instructions;

/* Format 12: load address
 *bit(s) value
 * 15 = 1
 * 14 = 0
 * 13 = 1
 * 12 = 0
 * 11 = SP Source 0 = PC, 1 = SP
 * 10-8 = Rd Destination register
 * 7-0 = #Imm 8 bit unsigned constant
 */
public class Thumb7Format12 extends Thumb7Instruction {
    public Thumb7Format12(ParsedInstruction pi) {
        super(pi);
        java.util.Vector opcodes = pi.getOpcodes();
        set(15);
        set(13);
        
        // SP
        try {
            int sp = getRegisterNumber((String)opcodes.elementAt(2));
            if (sp == 13) {
                set(11);
            }
        } catch(Exception e) {
            error("Syntax error: expected SP or PC for second argument");
        }
        
        // Rd
        try {
            int rd = getRegisterNumber((String)opcodes.elementAt(1));
           set(10, 8, rd);
        } catch(Exception e) {
            error("Syntax error: Rd");
        }
        
        // Offset
        try {
            int offset = parseExpression(((String)opcodes.elementAt(3)).substring(1));
            set(7, 0, offset);
        } catch(Exception e) {
            error("Syntax error: Rd");
        }        
    }
}
@


1.1
log
@*** empty log message ***
@
text
@d3 10
d17 28
@

