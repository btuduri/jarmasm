head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2003.02.07.18.18.41;	author hans;	state Exp;
branches;
next	1.1;

1.1
date	2003.02.03.16.47.09;	author hans;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Thumb7 support update
@
text
@package asm.instructions;

/*
 * Format 1: move shifted register
 * 15-13 0 0 0
 * 12,11 Op; Opcode
              0 - LSL
              1 - LSR
              2 - ASR
 * 10-6 Offset5; Immediate value
 *  5-3 Rs, Source Register
 *  2-0 Rd, Destination Register
 */
public class Thumb7Format1 extends Thumb7Instruction {
    public Thumb7Format1(ParsedInstruction pi) {
        super(pi);
        java.util.Vector opcodes = pi.getOpcodes();
        int rd = getRegisterNumber((String)opcodes.elementAt(1));
        int i = 1;
        for ( int bit = 0; bit <= 3; bit++ ) {
            if ( ( rd & i ) == i ) {
                set(bit);
            }
            i = i * 2;
        }
        int rs = getRegisterNumber((String)opcodes.elementAt(2));
        i = 1;
        for ( int bit = 3; bit <= 5; bit++ ) {
            if ( ( rs & i ) == i ) {
                set(bit);
            }
            i = i * 2;
        }
        int offset;
        String ofs = null;
        try {
            ofs = (String)opcodes.elementAt(3);
            offset = parseExpression(ofs.substring(1));
        } catch (ArrayIndexOutOfBoundsException  ae) {
            offset = 0;
        } catch (Exception e) {
            error(ofs + "Syntax error, expected #Offset3 ");
            return;
        }
        for ( int bit = 6; bit <= 10; bit++ ) {
            if ( ( offset & i ) == i ) {
                set(bit);
            }
            i = i * 2;
        }
    }
}
@


1.1
log
@*** empty log message ***
@
text
@d45 1
a45 1
        for ( int bit = 3; bit <= 5; bit++ ) {
@

