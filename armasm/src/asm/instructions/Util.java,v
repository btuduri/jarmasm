head	1.3;
access;
symbols;
locks; strict;
comment	@# @;


1.3
date	2003.02.09.01.54.11;	author hans;	state Exp;
branches;
next	1.2;

1.2
date	2003.02.07.18.18.41;	author hans;	state Exp;
branches;
next	1.1;

1.1
date	2003.02.03.16.47.12;	author hans;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Thumb support updates
@
text
@/* Copyright 2001 Sun Microsystems, Inc. All Rights Reserved. */

package asm.instructions;

/* Global utilities for instruction parsing */
public class Util {

    public static int getRegisterNumber(String opcode) throws NumberFormatException {
        if (opcode.equals("PC")) {
            return 15;
        }
        if (opcode.equals("SP")) {
            return 13;
        }
        
        String numbers = "0123456789";
        
        int rindex = opcode.toUpperCase().indexOf("R");
        if ( rindex < 0 ) {
            throw new NumberFormatException();
        }
        String rnum = null; 
        
        try {
            rnum = opcode.substring(rindex + 1, rindex + 2);
            if (numbers.indexOf(opcode.charAt(rindex + 2)) >= 0 ) {
                rnum = rnum + opcode.substring(rindex + 2, rindex + 3);
            }
        } catch (StringIndexOutOfBoundsException e ) {
        }    
        return Integer.parseInt(rnum);
    }

    public static void set(int hi, int lo, int value, java.util.BitSet code) {
        int i = 1;
        for ( int bit = lo; bit <= hi; bit++ ) {
            if ( ( value & i ) == i ) {
                code.set(bit);
            }
            i = i * 2;
        }
    }
}
@


1.2
log
@Thumb7 support update
@
text
@d8 1
a8 1
    static int getRegisterNumber(String opcode) throws NumberFormatException {
d34 9
@


1.1
log
@*** empty log message ***
@
text
@d9 7
@

